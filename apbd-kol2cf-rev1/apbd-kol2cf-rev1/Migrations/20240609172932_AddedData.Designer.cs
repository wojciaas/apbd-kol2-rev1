// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apbd_kol2cf_rev1.Context;

#nullable disable

namespace apbd_kol2cf_rev1.Migrations
{
    [DbContext(typeof(BoatServiceDbContext))]
    [Migration("20240609172932_AddedData")]
    partial class AddedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("apbd_kol2cf_rev1.Entities.BoatStandard", b =>
                {
                    b.Property<int>("IdBoatStandard")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdBoatStandard");

                    b.ToTable("BoatStandard", (string)null);

                    b.HasData(
                        new
                        {
                            IdBoatStandard = 1,
                            Level = 1,
                            Name = "Standard"
                        },
                        new
                        {
                            IdBoatStandard = 2,
                            Level = 2,
                            Name = "Premium"
                        },
                        new
                        {
                            IdBoatStandard = 3,
                            Level = 3,
                            Name = "Luxury"
                        });
                });

            modelBuilder.Entity("apbd_kol2cf_rev1.Entities.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdClientCategory")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdClient");

                    b.HasIndex("IdClientCategory");

                    b.ToTable("Client", (string)null);

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jkowal@ex.com",
                            IdClientCategory = 2,
                            LastName = "Kowalski",
                            Name = "Jan",
                            Pesel = "12345678901"
                        },
                        new
                        {
                            IdClient = 2,
                            Birthday = new DateTime(1995, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nowakA@ex.com",
                            IdClientCategory = 3,
                            LastName = "Nowak",
                            Name = "Anna",
                            Pesel = "12345678902"
                        },
                        new
                        {
                            IdClient = 3,
                            Birthday = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "pwis@ex.com",
                            IdClientCategory = 1,
                            LastName = "Wiśniewski",
                            Name = "Piotr",
                            Pesel = "12345678903"
                        });
                });

            modelBuilder.Entity("apbd_kol2cf_rev1.Entities.ClientCategory", b =>
                {
                    b.Property<int>("IdClientCategory")
                        .HasColumnType("int");

                    b.Property<int>("DiscountPerc")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdClientCategory");

                    b.ToTable("ClientCategory", (string)null);

                    b.HasData(
                        new
                        {
                            IdClientCategory = 1,
                            DiscountPerc = 0,
                            Name = "VIP"
                        },
                        new
                        {
                            IdClientCategory = 2,
                            DiscountPerc = 0,
                            Name = "Regular"
                        },
                        new
                        {
                            IdClientCategory = 3,
                            DiscountPerc = 0,
                            Name = "Poor"
                        });
                });

            modelBuilder.Entity("apbd_kol2cf_rev1.Entities.Reservation", b =>
                {
                    b.Property<int>("IdReservation")
                        .HasColumnType("int");

                    b.Property<string>("CancelReason")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime");

                    b.Property<bool>("Fullfilled")
                        .HasColumnType("bit");

                    b.Property<int>("IdBoatStandard")
                        .HasColumnType("int");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("NumOfBoats")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money");

                    b.HasKey("IdReservation");

                    b.HasIndex("IdBoatStandard");

                    b.HasIndex("IdClient");

                    b.ToTable("Reservation", (string)null);

                    b.HasData(
                        new
                        {
                            IdReservation = 1,
                            Capacity = 2,
                            DateFrom = new DateTime(2021, 6, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2021, 6, 1, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Fullfilled = true,
                            IdBoatStandard = 1,
                            IdClient = 1,
                            NumOfBoats = 1,
                            Price = 100m
                        },
                        new
                        {
                            IdReservation = 2,
                            Capacity = 4,
                            DateFrom = new DateTime(2021, 6, 2, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2021, 6, 2, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Fullfilled = true,
                            IdBoatStandard = 2,
                            IdClient = 2,
                            NumOfBoats = 1,
                            Price = 200m
                        },
                        new
                        {
                            IdReservation = 3,
                            Capacity = 6,
                            DateFrom = new DateTime(2021, 6, 3, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2021, 6, 3, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Fullfilled = true,
                            IdBoatStandard = 3,
                            IdClient = 3,
                            NumOfBoats = 1,
                            Price = 300m
                        });
                });

            modelBuilder.Entity("apbd_kol2cf_rev1.Entities.Sailboat", b =>
                {
                    b.Property<int>("IdSailboat")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdBoatStandard")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("IdSailboat");

                    b.HasIndex("IdBoatStandard");

                    b.ToTable("Sailboat", (string)null);

                    b.HasData(
                        new
                        {
                            IdSailboat = 1,
                            Capacity = 5,
                            Description = "Sailboat1 description",
                            IdBoatStandard = 1,
                            Name = "Sailboat1",
                            Price = 100m
                        },
                        new
                        {
                            IdSailboat = 2,
                            Capacity = 6,
                            Description = "Sailboat2 description",
                            IdBoatStandard = 2,
                            Name = "Sailboat2",
                            Price = 200m
                        },
                        new
                        {
                            IdSailboat = 3,
                            Capacity = 7,
                            Description = "Sailboat3 description",
                            IdBoatStandard = 3,
                            Name = "Sailboat3",
                            Price = 300m
                        });
                });

            modelBuilder.Entity("apbd_kol2cf_rev1.Entities.SailboatReservation", b =>
                {
                    b.Property<int>("IdReservation")
                        .HasColumnType("int");

                    b.Property<int>("IdSailboat")
                        .HasColumnType("int");

                    b.HasKey("IdReservation", "IdSailboat");

                    b.HasIndex("IdSailboat");

                    b.ToTable("Sailboat_Reservation", (string)null);

                    b.HasData(
                        new
                        {
                            IdReservation = 1,
                            IdSailboat = 1
                        },
                        new
                        {
                            IdReservation = 2,
                            IdSailboat = 2
                        },
                        new
                        {
                            IdReservation = 3,
                            IdSailboat = 3
                        });
                });

            modelBuilder.Entity("apbd_kol2cf_rev1.Entities.Client", b =>
                {
                    b.HasOne("apbd_kol2cf_rev1.Entities.ClientCategory", "ClientCategoryNavigation")
                        .WithMany("Clients")
                        .HasForeignKey("IdClientCategory")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("Client_ClientCategory");

                    b.Navigation("ClientCategoryNavigation");
                });

            modelBuilder.Entity("apbd_kol2cf_rev1.Entities.Reservation", b =>
                {
                    b.HasOne("apbd_kol2cf_rev1.Entities.BoatStandard", "BoatStandardNavigation")
                        .WithMany("Reservations")
                        .HasForeignKey("IdBoatStandard")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("BoatStandard_Reservation");

                    b.HasOne("apbd_kol2cf_rev1.Entities.Client", "ClientNavigation")
                        .WithMany("Reservations")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("Client_Reservation");

                    b.Navigation("BoatStandardNavigation");

                    b.Navigation("ClientNavigation");
                });

            modelBuilder.Entity("apbd_kol2cf_rev1.Entities.Sailboat", b =>
                {
                    b.HasOne("apbd_kol2cf_rev1.Entities.BoatStandard", "BoatStandardNavigation")
                        .WithMany("Sailboats")
                        .HasForeignKey("IdBoatStandard")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("Sailboat_BoatStandard");

                    b.Navigation("BoatStandardNavigation");
                });

            modelBuilder.Entity("apbd_kol2cf_rev1.Entities.SailboatReservation", b =>
                {
                    b.HasOne("apbd_kol2cf_rev1.Entities.Reservation", "ReservationNavigation")
                        .WithMany("SailboatReservations")
                        .HasForeignKey("IdReservation")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("Sailboat_Reservation_Reservation");

                    b.HasOne("apbd_kol2cf_rev1.Entities.Sailboat", "SailboatNavigation")
                        .WithMany("SailBoatReservations")
                        .HasForeignKey("IdSailboat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Sailboat_Reservation_Sailboat");

                    b.Navigation("ReservationNavigation");

                    b.Navigation("SailboatNavigation");
                });

            modelBuilder.Entity("apbd_kol2cf_rev1.Entities.BoatStandard", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("Sailboats");
                });

            modelBuilder.Entity("apbd_kol2cf_rev1.Entities.Client", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("apbd_kol2cf_rev1.Entities.ClientCategory", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("apbd_kol2cf_rev1.Entities.Reservation", b =>
                {
                    b.Navigation("SailboatReservations");
                });

            modelBuilder.Entity("apbd_kol2cf_rev1.Entities.Sailboat", b =>
                {
                    b.Navigation("SailBoatReservations");
                });
#pragma warning restore 612, 618
        }
    }
}
